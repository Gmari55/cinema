// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dataacces.Data;

#nullable disable

namespace dataacces.Migrations
{
    [DbContext(typeof(cinemadbcontext))]
    [Migration("20230603111607_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("dataacces.Entities.Actor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("birthdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deaddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("actors");
                });

            modelBuilder.Entity("dataacces.Entities.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActorIds")
                        .HasColumnType("int");

                    b.Property<int?>("Actorsid")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Actorsid");

                    b.ToTable("films");
                });

            modelBuilder.Entity("dataacces.Entities.Seans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("filmid")
                        .HasColumnType("int");

                    b.Property<DateTime>("timeend")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("timestart")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("filmid");

                    b.ToTable("seans");
                });

            modelBuilder.Entity("dataacces.Entities.Film", b =>
                {
                    b.HasOne("dataacces.Entities.Actor", "Actors")
                        .WithMany("films")
                        .HasForeignKey("Actorsid");

                    b.Navigation("Actors");
                });

            modelBuilder.Entity("dataacces.Entities.Seans", b =>
                {
                    b.HasOne("dataacces.Entities.Film", "film")
                        .WithMany()
                        .HasForeignKey("filmid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("film");
                });

            modelBuilder.Entity("dataacces.Entities.Actor", b =>
                {
                    b.Navigation("films");
                });
#pragma warning restore 612, 618
        }
    }
}
